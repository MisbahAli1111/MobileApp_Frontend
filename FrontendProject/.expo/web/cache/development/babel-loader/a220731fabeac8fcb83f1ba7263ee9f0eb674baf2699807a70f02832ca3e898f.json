{"ast":null,"code":"import React, { useRef } from \"react\";\nimport { Image } from \"expo-image\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Color, Border, FontFamily, FontSize } from \"../GlobalStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar VehicleCarousel = function VehicleCarousel() {\n  var navigation = useNavigation();\n  var scrollViewRef = useRef(null);\n  var images = [require(\"../assets/pngwing-3.png\"), require(\"../assets/pngwing-1.png\"), require(\"../assets/pngwing-2.png\"), require(\"../assets/pngegg-1.png\"), null];\n  var imageTexts = [\"Car\", \"Bike\", \"Truck\", \"Auto\", \"Other\"];\n  var handleNextPress = function handleNextPress() {\n    scrollViewRef.current.scrollTo({\n      x: 300,\n      animated: true\n    });\n  };\n  var handlePrevPress = function handlePrevPress() {\n    scrollViewRef.current.scrollTo({\n      x: 0,\n      animated: true\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.navigation,\n      children: _jsx(TouchableOpacity, {\n        onPress: handlePrevPress,\n        children: _jsx(Text, {\n          style: styles.arrow,\n          children: \"<\"\n        })\n      })\n    }), _jsx(ScrollView, {\n      ref: scrollViewRef,\n      horizontal: true,\n      contentContainerStyle: styles.scrollViewContent,\n      snapToInterval: 100,\n      decelerationRate: \"fast\",\n      children: images.map(function (image, index) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            var vehicleType = \"\";\n            switch (index) {\n              case 0:\n                vehicleType = \"Car\";\n                break;\n              case 1:\n                vehicleType = \"Bike\";\n                break;\n              case 2:\n                vehicleType = \"Truck\";\n                break;\n              case 3:\n                vehicleType = \"Auto\";\n                break;\n              case 4:\n                vehicleType = \"Other\";\n                break;\n              default:\n                break;\n            }\n            navigation.navigate(\"Vehicles\", {\n              type: vehicleType\n            });\n          },\n          children: _jsxs(LinearGradient, {\n            style: styles.item,\n            locations: [0, 1],\n            colors: [\"rgba(7, 132, 199, 0.5)\", \"rgba(217, 217, 217, 0)\"],\n            children: [_jsx(Image, {\n              source: image,\n              style: [styles.image, (index === 1 || index === 3) && styles.smallImage]\n            }), _jsx(Text, {\n              style: [styles.imageText, (index === 1 || index === 3) && styles.imageText2],\n              children: imageTexts[index]\n            })]\n          })\n        }, index);\n      })\n    }), _jsx(View, {\n      style: styles.navigation,\n      children: _jsx(TouchableOpacity, {\n        onPress: handleNextPress,\n        children: _jsx(Text, {\n          style: styles.arrow,\n          children: \">\"\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  scrollViewContent: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  navigation: {\n    width: 35,\n    height: 90,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  arrow: {\n    fontSize: 24,\n    color: \"#4e6e91\"\n  },\n  item: {\n    width: 80,\n    height: 104,\n    borderRadius: 5,\n    marginHorizontal: 6,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  image: {\n    width: \"100%\",\n    height: \"70%\",\n    resizeMode: \"contain\"\n  },\n  smallImage: {\n    width: \"60%\",\n    height: \"40%\"\n  },\n  imageText: {\n    top: 4,\n    fontSize: FontSize.size_sm,\n    color: Color.darkslateblue,\n    fontFamily: FontFamily.poppinsMedium,\n    color: \"black\",\n    textAlign: \"center\"\n  },\n  imageText2: {\n    top: 20,\n    fontSize: FontSize.size_sm,\n    color: Color.darkslateblue,\n    fontFamily: FontFamily.poppinsMedium\n  }\n});\nexport default VehicleCarousel;","map":{"version":3,"names":["React","useRef","Image","LinearGradient","View","Text","TouchableOpacity","ScrollView","StyleSheet","useNavigation","Color","Border","FontFamily","FontSize","jsx","_jsx","jsxs","_jsxs","VehicleCarousel","navigation","scrollViewRef","images","require","imageTexts","handleNextPress","current","scrollTo","x","animated","handlePrevPress","style","styles","container","children","onPress","arrow","ref","horizontal","contentContainerStyle","scrollViewContent","snapToInterval","decelerationRate","map","image","index","vehicleType","navigate","type","item","locations","colors","source","smallImage","imageText","imageText2","create","flex","flexDirection","alignItems","justifyContent","width","height","fontSize","color","borderRadius","marginHorizontal","resizeMode","top","size_sm","darkslateblue","fontFamily","poppinsMedium","textAlign"],"sources":["C:/Users/DELL/Documents/frontend-car-maintenance/FrontendProject/components/VehicleCarousel.js"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { Image } from \"expo-image\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Color, Border, FontFamily, FontSize } from \"../GlobalStyles\";\r\n\r\nconst VehicleCarousel = () => {\r\n  const navigation = useNavigation();\r\n  const scrollViewRef = useRef(null);\r\n\r\n  const images = [\r\n    require(\"../assets/pngwing-3.png\"),\r\n    require(\"../assets/pngwing-1.png\"),\r\n    require(\"../assets/pngwing-2.png\"),\r\n    require(\"../assets/pngegg-1.png\"),\r\n    null,\r\n  ];\r\n\r\n  const imageTexts = [\"Car\", \"Bike\", \"Truck\", \"Auto\", \"Other\"];\r\n\r\n  const handleNextPress = () => {\r\n    scrollViewRef.current.scrollTo({ x: 300, animated: true });\r\n  };\r\n\r\n  const handlePrevPress = () => {\r\n    scrollViewRef.current.scrollTo({ x: 0, animated: true });\r\n  };\r\n\r\n  // ... (previous imports and code) ...\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.navigation}>\r\n        <TouchableOpacity onPress={handlePrevPress}>\r\n          <Text style={styles.arrow}>{\"<\"}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <ScrollView\r\n        ref={scrollViewRef}\r\n        horizontal\r\n        contentContainerStyle={styles.scrollViewContent}\r\n        snapToInterval={100} // Width of each item + margin\r\n        decelerationRate=\"fast\"\r\n      >\r\n        {images.map((image, index) => (\r\n          <TouchableOpacity\r\n            key={index}\r\n            onPress={() => {\r\n              let vehicleType = \"\";\r\n              switch (index) {\r\n                case 0:\r\n                  vehicleType = \"Car\";\r\n                  break;\r\n                case 1:\r\n                  vehicleType = \"Bike\";\r\n                  break;\r\n                case 2:\r\n                  vehicleType = \"Truck\";\r\n                  break;\r\n                case 3:\r\n                  vehicleType = \"Auto\";\r\n                  break;\r\n                case 4:\r\n                  vehicleType = \"Other\";\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n\r\n              navigation.navigate(\"Vehicles\", { type: vehicleType });\r\n            }}\r\n          >\r\n            <LinearGradient\r\n              style={styles.item}\r\n              locations={[0, 1]}\r\n              colors={[\"rgba(7, 132, 199, 0.5)\", \"rgba(217, 217, 217, 0)\"]}\r\n            >\r\n              <Image\r\n                source={image}\r\n                style={[\r\n                  styles.image,\r\n                  (index === 1 || index === 3) && styles.smallImage,\r\n                ]}\r\n              />\r\n              <Text\r\n                style={[\r\n                  styles.imageText,\r\n                  (index === 1 || index === 3) && styles.imageText2,\r\n                ]}\r\n              >\r\n                {imageTexts[index]}\r\n              </Text>\r\n            </LinearGradient>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </ScrollView>\r\n      <View style={styles.navigation}>\r\n        <TouchableOpacity onPress={handleNextPress}>\r\n          <Text style={styles.arrow}>{\">\"}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  // ... (remaining styles and export) ...\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  scrollViewContent: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  navigation: {\r\n    width: 35,\r\n    height: 90,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  arrow: {\r\n    fontSize: 24,\r\n    color: \"#4e6e91\",\r\n  },\r\n  item: {\r\n    width: 80,\r\n    height: 104,\r\n    borderRadius: 5,\r\n    marginHorizontal: 6,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"70%\",\r\n    resizeMode: \"contain\",\r\n  },\r\n  smallImage: {\r\n    width: \"60%\",\r\n    height: \"40%\",\r\n  },\r\n  imageText: {\r\n    top: 4,\r\n    fontSize: FontSize.size_sm,\r\n    color: Color.darkslateblue,\r\n    fontFamily: FontFamily.poppinsMedium,\r\n    color: \"black\",\r\n    textAlign: \"center\",\r\n  },\r\n  imageText2: {\r\n    top: 20,\r\n\r\n    fontSize: FontSize.size_sm,\r\n    color: Color.darkslateblue,\r\n    fontFamily: FontFamily.poppinsMedium,\r\n  },\r\n});\r\n\r\nexport default VehicleCarousel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}